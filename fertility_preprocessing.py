import warnings
import pandas as pd
from datetime import datetime
from create_connect_bd import cnx
warnings.filterwarnings('ignore')

mo_dict = {'липецк ': 'Липецк',
           'елец ': 'Елец',
           'грязинский': 'Грязинский', 'липецкий': 'Липецкий', 'усманский': 'Усманский', 'лебедянский': 'Лебедянский',
           'задонский': 'Задонский', 'добринский': 'Добринский', 'данковский': 'Данковский',
           'чаплыгинский': 'Чаплыгинский', 'елецкий': 'Елецкий', 'добровский': 'Добровский', 'тербунский': 'Тербунский',
           'хлевенский': 'Хлевенский', 'становлянский': 'Становлянский', 'долгоруковский': 'Долгоруковский',
           'лев-толстовский': 'Лев-Толстовский', 'измалковский': 'Измалковский', 'воловский': 'Воловский',
           'краснинский': 'Краснинский',
           'липецк,': 'Липецк', 'грязи': 'Грязинский', 'усмань': 'Усманский', 'лебедянь': 'Лебедянский',
           'задонск': 'Задонский', 'добринка': 'Добринский', 'данков': 'Данковский', 'чаплыгин': 'Чаплыгинский',
           'доброе': 'Добровский', 'тербуны': 'Тербунский', 'хлевное': 'Хлевенский', 'становое': 'Становлянский',
           'долгоруково': 'Долгоруковский', 'лев-толстой': 'Лев-Толстовский', 'лев толстой': 'Лев-Толстовский',
           'измалково': 'Измалковский', 'волово': 'Воловский', 'красное': 'Краснинский',
           }


def fertility_preprocessing(save_to_sql=False, save_to_excel=False):
    df = pd.read_sql_query('''select * from fertility''', cnx)
    df[['mother_year_of_birth', 'due_date_year',
        'due_date_month', 'mother_age']] = df[['mother_year_of_birth', 'due_date_year',
                                               'due_date_month', 'mother_age']].astype('int64')
    print(f'Количество записей: {len(df)}')
########################################################################################################################
    print('Обработка mother_address...')
    start_time = datetime.now()
    for i in df.index[:]:
        for mo in mo_dict.keys():
            if df.loc[i, 'mother_address'].lower().find(mo) != -1:
                df.loc[i, 'mo'] = mo_dict[mo]
                break
            else:
                df.loc[i, 'mo'] = 'Адрес матери не указан или за пределами Липецкой области'
    print(f'Elapsed time {datetime.now() - start_time}')
    print(f'Количество записей: {len(df)}')
    print(df[['mother_address', 'Region']].sample(3))
########################################################################################################################
    print(f"Количество нераспознанных адресов: {len(df[df.mo.isna()][['mother_address', 'mo']][:])}")
    print(df[df.mo == 'Адрес матери не указан или за пределами Липецкой области'].mother_address.unique())
########################################################################################################################
# Финальная обработка названий районов
    print('Финальная обработка названий районов...')
    print(f'Количество районов: {len(df.Region.unique())}')
    print(sorted(df.Region.unique()))
########################################################################################################################
# Сохраняем предобработанные данные
    if save_to_sql:
        print('Сохраняем данные в базу данных...')
        # df_death.to_sql('death_finished', cnx, if_exists='replace', index_label='id')
    if save_to_excel:
        print('Сохраняем данные в файл...')
        path = r'Рассчеты/'
        with pd.ExcelWriter(f'{path}fertility_preprocessed.xlsx', engine='openpyxl') as writer:
            df.to_excel(writer, sheet_name=f'fertility_preprocessed', header=True, index=False, encoding='1251')
########################################################################################################################
    return df
########################################################################################################################


if __name__ == '__main__':
    fertility_preprocessing(save_to_sql=False, save_to_excel=True)
